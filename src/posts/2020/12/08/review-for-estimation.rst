.. post:: 2020-12-08
   :tags: 見積もりレビュー
   :category: Software Development Process

.. meta::
  :description: コードレビューより前にするレビューについての模索その2

======================================
見積もりレビューのアプローチ(概算編)
======================================

コードレビューより前にするレビューについての模索その2

はじめに
==========

以前の記事 :ref:`review-on-web-system-development` でコードレビューだけじゃなく「要件定義〜設計」の成果物に対してもレビューをした方がいいのでは？ということを書いたので、今回はその続きで具体的な見積もりレビュー方法について書いてみました。

.. note::

  とりあえず、ここでは最初期の概算見積もりのみを対象にします。要件定義後の再見積もりはスコープ外です。

.. note::

  1. この文章は今まで何となくやっていたものを明文化したという状態で、draft の段階と言えます。その前提でお読みください。( :ref:`review-for-system-design` より想像で書いている面があります
  2. WEBシステムが対象です

見積もり手法
==============================

前提として何かしらのロジックに従って見積もりをしないと、レビューしようがない。

まず、見積もり手法としては以下がある。

* 類推見積もり: 過去の実績をもとにする
* パラメトリック見積もり: ファンクションポイント法など、何かしらの変数から統計的に工数を算出する
* ボトムアップ見積もり:  タスクに分解してそれぞれにかかる工数を算出・集計

下に行くほど正確な見積もりが可能(なはず)だが、条件として要件がより具体的になっている必要がある。また精度という意味では複数の手法を組み合わせるのが有効とされる。

つまるところ最初期に正確な見積もりをすることは不可能であり、それでも見積もりを求められた場合は「後で再見積もりすることを前提にしつつ、不確実さを考慮に入れた概算見積もり」をすることになる。

不確実性
============

不確実性コーン [1]_ というグラフがあり、その中で初期コンセプト段階では4倍までばらつきがあることが示されている。つまり、最も悲観的なケースを想定した場合、最初期では見積もりにx4して出しても良いということになる（要求の完了時点で x1.5 なので甘くみても1.5倍）。 [2]_

4倍は流石にやりすぎではという感もあるが、どの道4倍価格で一括受注なんてことはせず、要件定義後に再見積もりする前提なので、単純に「受注できないリスク」と「実際に四倍工数がかかるリスク」どっちを取るかという判断になる。

まぁ、クライアントに見積もりの根拠を求められることもありえるので、「4倍から減らしても大丈夫そう」な根拠があるのであれば、下げて出しても良いと思う。具体的に言えばちゃんとしたRFPが存在しているかどうかで、その上で

* やりたいことが明瞭で一貫性があるか
* 規模の大きい、小さいが明確か

  * そもそもの規模が小さければそこまでブレないため

* 上層部（財布の紐を持っている人）の意思が反映されている・または反映できる状態にあるか
* スケジュールに合わせてアサインも調整可能そうか

  * クライアントからすれば関係ない話だが、実際問題ちゃんとアサインできないなら納期守れないんだから、その点考慮するべき

* 既存のシステムがあるが仕様書はありませんみたいなことがないか
* クライアントとスムーズなコミュニケーションが取れそうか

  * 経済産業省の `[簡略版] 紛争事例に学ぶ、IT導入講座~ ユーザとしてここだけは見ておきたい ~ <https://www.meti.go.jp/policy/digital_transformation/asset/meti-dx/20190131/course05.pdf>`_ にあるの判例でも「情報システムの開発は、発注者と受注者の共同作業であり、単に 受注者の努力によって成功するものではない。（意訳）」となっている。
  * 当然開発側もクライアントがわからないことには懇切丁寧に説明するなどのコミュニケーション努力が必要であり、場合によってはそれなりのコストがかかることもありえる。

* 調査してみないと何とも言えないことがないか

あたりで調整ということになるのでは。


見積もりのレビュー
===========================

ここまで書いてようやくレビューに入るわけですが、まぁ上記に沿っていてそれが妥当かを見れば良いので

* ベースの工数はどういう基準で出しているのか
* 不確実さの係数はどのように出しているか

を見ることになるかなと。

まとめ
=========

一言でいうと「概算は多めに出しておけばいいんすよ」という話でした

感想
======

とりあえず書いた

* いやまぁ、別に高く見積もって儲けたいとかじゃなく、低く見積もって失敗した経験があるので、適切にしたいんですよ。。
* 各見積もり手法でどれだけ精度が期待できるかっていう指標があればいいんですが、見つかりませんでした（あったら追記）
* この辺の見積もり分野はいわゆるエンタープライズ系のほうがよほど進んでいるように思える。まぁWEBは比較的に規模が小さいので勘でやってもなんとかなっていたと言う感じなのかな。

参考
====

* https://www.ipa.go.jp/sec/std/ent01-c.html

.. rubric:: Footnotes

.. [1] `プロジェクトの本質とはなにか | 日経クロステック（xTECH） <https://xtech.nikkei.com/it/article/COLUMN/20131001/508039/>`_
.. [2] 不確実性コーンの初出の本を読んでいないのでそう言うことじゃねーよと言われる可能性があります
